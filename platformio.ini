; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:bluepill_emulado]
platform = ststm32
board = bluepill_f103c8
framework = cmsis
platform_packages = 
    platformio/tool-renode ; emulador
build_flags =
   -Wall
   -Wextra
   -DUNITY_SUPPORT_64
build_type = debug
debug_tool = custom
debug_init_cmds = 
    define pio_reset_halt_target
        monitor machine Reset
        $LOAD_CMDS
        monitor start
    end
    define pio_reset_run_target
        pio_reset_halt_target
    end
    target extended-remote $DEBUG_PORT
    $LOAD_CMDS
    $INIT_BREAK
    monitor start
debug_port = localhost:3333
debug_server = ${platformio.packages_dir}/tool-renode/bin/renode
    -e using sysbus
    -e mach create
    -e machine LoadPlatformDescription @platforms/cpus/stm32f103.repl
    -e showAnalyzer uart1
    -e sysbus LoadELF @${platformio.build_dir}/${this.__env__}/firmware.elf
    -e sysbus.cpu DisableInterruptsWhileStepping true
    -e cpu PerformanceInMips 8
    -e machine StartGdbServer 3333
debug_server_ready_pattern = GDB server with all CPUs started on port
debug_test = test_algoritmos
upload_protocol = custom
upload_command = echo 1 ; No hay que cargar nada...
test_testing_command = 
    ${platformio.packages_dir}/tool-renode/bin/renode
    --disable-xwt
    -e using sysbus
    -e mach create
    -e machine LoadPlatformDescription @platforms/cpus/stm32f103.repl
    -e showAnalyzer uart1
    -e cpu PerformanceInMips 8
    -e sysbus LoadELF @${platformio.build_dir}/${this.__env__}/firmware.elf
    -e start